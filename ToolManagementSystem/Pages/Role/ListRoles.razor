@page "/Role/ListRoles"
@using ToolManagementSystem.Shared.Service
@using ToolManagementSystem.Shared.Models
@inject RolesService RolesService
@inject NavigationManager NavigationManager


<h3>ListRoles</h3>


<EditForm Model="@role">
    <DataAnnotationsValidator />
    <span class="oi oi-plus" aria-hidden="true"></span>Add New Role
    <div class="form-group">
        <label>First Name:</label>
        <div class="form-group">
            <InputText @bind-Value="@role.RoleName" class="form-control" />
            <ValidationMessage For="@(()=>role.RoleName)" />
        </div>
    </div>
    <div class="container">
        <button type="submit" class="btn btn-success col-md-12" @onclick="@CreateRole">Create Employee</button>
    </div>
    <div class="container">
        <input type="button" class="btn btn-success col-md-12" @onclick="@Cancel" value="Cancel" />
    </div>
</EditForm>


@if (Roles == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <td>Manage</td>
                <th>Id</th>
                <th>Role Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var role in Roles)
            {
                <tr>

                    <td>
                        <div class="dropdown">
                            <button class="dropbtn">...</button>
                            <div class="dropdown-content">
                                <a class="dropdown-item btn btn-primary" href="/Role/EditRole/@role.Id">Edit</a>
                                <a class="dropdown-item btn btn-primary" href="/Role/detailsRole/@role.Id">Details</a>
                                @*<a class="dropdown-item btn btn-primary" @onclick="@(()=>RolesService.DeleteEmployee(role))">Delete</a>*@
                            </div>
                        </div>
                    </td>
                    <td>@role.Id</td>
                    <td>@role.RoleName</td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    List<Roles> Roles;
    Roles role = new Roles();
    protected override async Task OnInitializedAsync()
    {
        Roles = await Task.Run(() => RolesService.GetRoles());
    }


    private async Task CreateRole()
    {
        await RolesService.CreateRole(role);
        NavigationManager.NavigateTo("Role/ListRoles");
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("Role/ListRoles");
    }

}
