@page "/Role/ListRoles"
@using ToolManagementSystem.Shared.Service
@using ToolManagementSystem.Shared.Models
@inject RolesService RolesService
@inject NavigationManager NavigationManager

<div class="container">
    <h1>Создание роли</h1>
    <EditForm Model="@role">
        <DataAnnotationsValidator />
        <div class="form-group">
            <label>Название роли:</label>
            <div class="form-group">
                <InputText @bind-Value="@role.RoleName" class="form-control" />
                <ValidationMessage For="@(()=>role.RoleName)" />
            </div>
        </div>
        <br />
        <div class="container-fluid">
            <button type="submit" class="btn btn-success col-md-12" @onclick="@CreateRole">Создать Роль</button>
        </div>
        <br />
        <div class="container-fluid">
            <input type="button" class="btn btn-success col-md-12" @onclick="@Cancel" value="Отмена" />
        </div>
    </EditForm>
</div>
<br /><hr />
<div class="container">
    <h1>Список ролей</h1><hr />
    @if (Roles == null)
    {
        <p><em>Загрузка...</em></p>
    }
    else
    {
        <table class="table">
            <thead class="text-align-center">
                <tr>
                    <th>Управление</th>
                    <th>Id</th>
                    <th>Название роли</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var role in Roles)
                {
                    <tr>
                        <td>
                            <a class="btn btn-primary fa fa-edit" href="/Role/EditRole/@role.Id"></a>
                            <a class="btn btn-primary fa fa-edit" href="/Role/AssignmentPages/@role.Id"></a>
                            <a class="btn btn-primary fa fa-times" @onclick="@(()=>RolesService.DeleteRole(role))"></a>  
                        </td>
                        <td>@role.Id</td>
                        <td>@role.RoleName</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>



@code {
    List<Roles> Roles;
    Roles role = new Roles();
    protected override void OnInitialized()
    {
        Roles = RolesService.GetRoles();
    }

    private async Task CreateRole()
    {
        await RolesService.CreateRole(role);
        NavigationManager.NavigateTo("Role/ListRoles");
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("Role/ListRoles");
    }

}

