@page "/Role/AssignmentRole/{userId}"
@using ToolManagementSystem.Shared.Service
@using ToolManagementSystem.Shared.Models
@inject RolesService RolesService
@inject NavigationManager NavigationManager


<h3>AssignmentRole</h3>

<div>
    @if (listRoles!=null)
    {
        foreach (var role in listRoles)
        {
            //if () //доделать проверку соответственному пальзователю выводить его роли
            //{

            //}
            <h5 class="card-title">@role.RoleName</h5>
            <br />
        }
        <div class="container">
            <EditForm Model="listRoles">
                <div class="card">
                    <div class="card-header">
                        <h1>Add or remove users from this role</h1>
                    </div>
                    <div class="card-body">
                        @for (int i = 0; i < listRoles.Count; i++)
                        {
                            var local = i;
                            <div class="custom-control custom-checkbox">
                                <InputCheckbox @bind-Value="listRoles[local].IsSelected" class="form-check-input" />
                                <label class="form-check-label"  for="@listRoles[i].IsSelected" >
                                    @listRoles[i].RoleName
                                </label>
                            </div>
                            <br />
                        }
                    </div>
                    <div class="card-footer">
                        <div class="container">
                            <button type="submit" class="btn btn-success col-md-12" @onclick="@UpdateEmployeeRole" value="Update" />
                        </div>
                        <div class="container">
                            <button type="button" class="btn btn-success col-md-12" @onclick="@Cancel" value="Cancel" />
                        </div>
                    </div>
                </div>
            </EditForm>
        </div>


    }
    else
    {
        <h5 class="card-title">None at the moment</h5>
    }
</div>




@code {
    [Parameter] public string userId { get; set; }



    List<Roles> listRoles;

    protected override async Task OnInitializedAsync()
    {
        listRoles = await Task.Run(() => RolesService.GetRoles());
    }

    private async Task UpdateEmployeeRole()
    {
        await RolesService.EditUsersInRole(listRoles,Convert.ToInt32(userId));
        NavigationManager.NavigateTo("Role/ListRoles");
    }


    public void Cancel()
    {
        NavigationManager.NavigateTo("Employee/Employee");
    }


}
