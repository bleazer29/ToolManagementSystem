@layout LoginLayout
@page "/Account/ResetPassword"
@inject ToolManagementSystem.Shared.Service.AccountService AccountService
@using ToolManagementSystem.Shared.Models
@inject NavigationManager NavigationManager


<h3>Сбросить пароль</h3>
<h4>Для того, чтобы сбросить пароль, нужно ввести свой логин и ответ на вопрос</h4>
<EditForm method="POST" Model="Employee">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label class="control-label">Логин</label>
        <InputText @bind-Value="@Employee.UserName" class="form-control" />
        <ValidationMessage For="@(()=>Employee.UserName)" />
    </div>
    <div class="form-group">
        <label class="control-label" asp-for="Password">Вопрос</label>
        <input value="@Employee.Question" class="form-control" readonly />
    </div>
    <div class="form-group">
        <label class="control-label">Ваш Ответ на вопрос</label>
        <InputText @bind-Value="@Employee.Answer" class="form-control" />
        <ValidationMessage For="@(()=>Employee.Answer)" />
    </div>
    <div class="form-group">
        <label class="control-label">Новый пароль: </label>
        <InputText @bind-Value="@Employee.Password" class="form-control" />
        <ValidationMessage For="@(()=>Employee.Password)" />
    </div>
    @if (isChecked)
    {
        <div><h5>Ваш пароль сменен!</h5></div>
    }
    <button type="submit" class="btn btn-primary center mt-1" @onclick="@isCheckedAnswerAndEmployee">Отправить</button>
    <button type="button" class="btn btn-primary center" @onclick="Cancel">Вернуться ко входу в личный кабинет</button>
</EditForm>





@code {
    public Employees Employee { get; set; } = new Employees();
    public bool isChecked { get; set; }
    public async Task isCheckedAnswerAndEmployee()
    {
        isChecked = await AccountService.ResetPassword(Employee.UserName, Employee.Answer, Employee.Password);
      
    }

    public void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }
}
