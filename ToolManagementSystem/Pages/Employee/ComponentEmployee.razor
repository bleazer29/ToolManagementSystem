@inject HttpClient Http
@inject NavigationManager NavigationManager
@using ToolManagementSystem.Shared.Models

<EditForm Model="@employee" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>First Name:</label>
        <div class="form-group">
            <InputText @bind-Value="@employee.FirstName" class="form-control" />
            <ValidationMessage For="@(()=>employee.FirstName)" />
        </div>
    </div>
    <div class="form-group">
        <label>Patronymic:</label>
        <div class="form-group">
            <InputText @bind-Value="@employee.Patronymic" class="form-control" />
            <ValidationMessage For="@(()=>employee.Patronymic)" />
        </div>
    </div>
    <div class="form-group">
        <div class="form-group">

            <label>Last Name:</label>
            <InputText @bind-Value="@employee.LastName" class="form-control" />
            <ValidationMessage For="@(()=>employee.LastName)" />
        </div>
    </div>
    <div class="form-group">
        <label>Birth Date:</label>
        <div class="form-group">
            <InputDate @bind-Value="@employee.BirthDate" class="form-control" />
            <ValidationMessage For="@(()=>employee.BirthDate)" />
        </div>
    </div>
    <div class="container">
        <button type="submit" class="btn btn-success col-md-12">@ButtonText</button>
    </div>
    <div class="container">
        <input type="button" class="btn btn-success col-md-12" @onclick="@Cancel" value="Cancel"/>
    </div>
</EditForm>

@code {
    [Parameter] public Employees employee { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save data about employee";
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    public void Cancel()
    {
        NavigationManager.NavigateTo("employee/employee");
    }
}
